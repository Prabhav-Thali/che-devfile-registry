#
# Copyright (c) 2020-2021 Red Hat, Inc.
# This program and the accompanying materials are made
# available under the terms of the Eclipse Public License 2.0
# which is available at https://www.eclipse.org/legal/epl-2.0/
#
# SPDX-License-Identifier: EPL-2.0
#

name: Build/Publish

on:
  push:
    branches: 
      - master

env:
  IMAGE: quay.io/prabhav/che-devfile-registry

jobs:
  nightly-build-publish:
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      fail-fast: false
      matrix:
        arch: [amd64,arm64,ppc64le,s390x]
    outputs:
      amd64: ${{ steps.result.outputs.amd64 }}
      arm64: ${{ steps.result.outputs.arm64 }}
      ppc64le: ${{ steps.result.outputs.ppc64le }}
      s390x: ${{ steps.result.outputs.s390x }}
    steps:
      -
        name: "Checkout Che Dashboard source code"
        uses: actions/checkout@v2
      - 
        name: Prepare
        id: prep
        run: |
          SHORT_SHA1=$(git rev-parse --short HEAD)
          echo ::set-output name=short_sha1::${SHORT_SHA1}
          # VERSION file contains 7.yy.0-SNAPSHOT but for nightlies we want just a nightly tag
          # VERSION=$(head -n 1 VERSION)
          # echo ::set-output name=version::${VERSION}
          echo ::set-output name=version::nightly
          PLATFORMS=$(cat PLATFORMS)
          echo ::set-output name=platforms::${PLATFORMS}
      -
        name: "Set up QEMU"
        uses: docker/setup-qemu-action@v1
      -
        name: "Set up Docker Buildx ${{ matrix.arch }}"
        uses: docker/setup-buildx-action@v1
      -
        name: "Docker quay.io Login"
        uses: docker/login-action@v1
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_PASSWORD }}
      - 
        name: Login to docker.io
        uses: docker/login-action@v1
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      -
        name: "Build and push ${{ matrix.arch }}"
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./build/dockerfiles/Dockerfile
          platforms: linux/${{ matrix.arch }}
          tags:  ${{ env.IMAGE }}:${{ steps.prep.outputs.version }}-${{ matrix.arch }},${{ env.IMAGE }}:${{ steps.prep.outputs.short_sha1 }}-${{ matrix.arch }}
          push: true 
      -
        id: result
        name: "Build result outputs version"
        if: ${{ success() }}
        run: echo "::set-output name=${{ matrix.arch }}::${{ steps.prep.outputs.version }}-${{ matrix.arch }}"
  
  build-images:
    if: always()
    needs: nightly-build-publish
    runs-on: ubuntu-18.04
    steps:
      - name: "Checkout Che Dashboard source code"
        uses: actions/checkout@v2
      -
        name: "Docker quay.io Login"
        uses: docker/login-action@v1
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_PASSWORD }}

      - name: Build and push base images
        run: /bin/bash arbitrary-users-patch/build_images.sh --push

      - name: Build and push happy path image
        run: /bin/bash arbitrary-users-patch/happy-path/build_happy_path_image.sh --push

  create-manifest:
    if: always()
    needs: nightly-build-publish
    runs-on: ubuntu-18.04
    steps:
      -
        name: "Docker quay.io Login"
        uses: docker/login-action@v1
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_PASSWORD }}
      -  
        name: "Create and push manifest"
        run: |
          AMEND=""
          AMD64_VERSION="${{ needs['nightly-build-publish'].outputs.amd64 }}"
          if [ -n "$AMD64_VERSION" ]; then
            AMEND+=" --amend ${{ env.IMAGE }}:$AMD64_VERSION";
          fi
          ARM64_VERSION="${{ needs['nightly-build-publish'].outputs.arm64 }}"
          if [ -n "$ARM64_VERSION" ]; then
            AMEND+=" --amend ${{ env.IMAGE }}:$ARM64_VERSION";
          fi
          PPC64LE_VERSION="${{ needs['nightly-build-publish'].outputs.ppc64le }}"
          if [ -n "$PPC64LE_VERSION" ]; then
            AMEND+=" --amend ${{ env.IMAGE }}:$PPC64LE_VERSION";
          fi
          S390X_VERSION="${{ needs['nightly-build-publish'].outputs.s390x }}"
          if [ -n "$S390X_VERSION" ]; then
            AMEND+=" --amend ${{ env.IMAGE }}:$S390X_VERSION";
          fi
          if [ -z "$AMEND" ]; then
            echo "[!] The job 'nightly-build-publish' didn't provide any outputs. Can't create the manifest list."
            exit 1;
          fi
          docker manifest create ${{ env.IMAGE }}:${{ needs['nightly-build-publish'].steps.prep.outputs.version }} $AMEND
          docker manifest push ${{ env.IMAGE }}:${{ needs['nightly-build-publish'].steps.prep.outputs.version }}
